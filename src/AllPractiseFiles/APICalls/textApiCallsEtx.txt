-api calls
CHATGPT only
API calls using different HTTP methods (GET, POST, PUT, DELETE) with the Fetch API
general syntax:
GET Request: Retrieves data from the server.
fetch(url)
.then(response=>response.json())
.then(data=>console.log(data))
.catch(error => console.error('Error:', error));
https://jsonplaceholder.typicode.com/users
POST Request with Fetch:Sends data to the server to create a new resource.
fetch(url,{
    method:"POST",
    headers:{
        'Content-Type' : 'application/json',
    },
    body: JSON.stringify({
        key: "value"
    }),
})
.then(response=>response.json())
.then(data=>console.log(data))
.catch(error => console.error('Error:', error));
 https://jsonplaceholder.typicode.com/posts
PUT Request: Updates an existing resource on the server or create a resource at a specific URI (Uniform Resource Identifier)
fetch(url,{
    method: "PUT",
    headers: {
        'Content-Type' : 'application/json',
    },
    body: JSON.stringify({
        key: "new_value"
    }),
})
.then(response => response.json())
.then(data => console.log(data))
.catch(error => console.error('Error:', error));
https://jsonplaceholder.typicode.com/posts/1
DELETE Request: Deletes a resource on the server.
fetch(url,{
    method: "DELETE",
})
.then(response => response.json())
.then(data => console.log(data))
.catch(error => console.error('Error:', error));
 https://jsonplaceholder.typicode.com/posts/1
 PATCH Request:PATCH is used to apply partial modifications to a resource:
 fetch('https://api.example.com/update/123', {
    method: 'PATCH',
    headers: {
        'Content-Type': 'application/json',
    },
    body: JSON.stringify({ keyToUpdate: 'new_value' }),
})
.then(response => response.json())
.then(data => console.log(data))
.catch(error => console.error('Error:', error));
PUT VS PATCH
PUT IS FOR Complete Replacement: When a client sends a PUT request, it typically sends the entire 
updated representation of the resource.The server then replaces the existing resource with the new representation 
provided in the request.
PATCH IS FOR Partial Update: Unlike PUT, PATCH allows clients to send only the data that needs to be 
updated, rather than sending the entire resource representation.
It enables selective modifications to specific fields of a resource.
COMMON: BOTH put and patch are designed to be idempotent, meaning that making the same 
request multiple times has the same effect as making it once.
In case when the resource is not present on the server :
PUT request is made to a URI where the resource does not exist, the server will typically create a new 
resource at that URI using the provided representation in the request body.
PATCH ,the server may choose to either create a new resource or respond with an error, depending on the 
server implementation.
A Uniform Resource Identifier (URI) is a string of characters that uniquely identifies a particular resource.
The term "URI" is often used interchangeably 
with "URL" (Uniform Resource Locator), but technically, a URL is a specific type of URI.
________________________________________________________________________________